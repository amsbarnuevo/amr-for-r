install.packages("AMR")
packages.install("tidyverse")
install.packages("tidyverse")
print(data)
head(data1)
head(data1)
print(data())
# Read CSV into DataFrame
#w_data <- read.csv("D:\ALLYSA FILE\2023\DMU Files\AMR for R\data samples\W0123PHL_dmc.csv", header = TRUE)
w_data <- "hello"
#w_data <- read.csv("D:\ALLYSA FILE\2023\DMU Files\AMR for R\data samples\W0123PHL_dmc.csv", header = TRUE)
w_data <- "hello"
print(w_data)
install.packages(readr)
# transform variables
W_data <- WHONET %>%
# get microbial ID based on given organism
mutate(mo = as.mo(Organism)) %>%
# transform everything from "AMP_ND10" to "CIP_EE" to the new `sir` class
mutate_at(vars(AMP_ND10:CIP_EE), as.sir)
install.packages("magrittr")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("cleaner")
install.packages("readr")
# transform variables
W_data <- WHONET %>%
# get microbial ID based on given organism
mutate(mo = as.mo(Organism)) %>%
# transform everything from "AMP_ND10" to "CIP_EE" to the new `sir` class
mutate_at(vars(AMP_ND10:CIP_EE), as.sir)
W_data <- read_csv("D:\ALLYSA FILE\2023\DMU Files\AMR for R\data samples\W0123PHL_dmc.csv")
W_data <- read_csv(path = "D:\ALLYSA FILE\2023\DMU Files\AMR for R\data samples\W0123PHL_dmc.csv")
W_data <- read_csv("D:\\ALLYSA FILE\\2023\\DMU Files\\AMR for R\\data samples\\W0123PHL_dmc.csv")
W_data <- read_csv("D:\\ALLYSA FILE\\2023\\DMU Files\\AMR for R\\data samples\\W0123PHL_dmc.csv")
W_data <- read.csv("D:\\ALLYSA FILE\\2023\\DMU Files\\AMR for R\\data samples\\W0123PHL_dmc.csv")
w_data <- read.csv("D:\ALLYSA FILE\2023\DMU Files\AMR for R\data samples\W0123PHL_dmc.csv")
w_data <- read.csv(path = "D:\ALLYSA FILE\2023\DMU Files\AMR for R\data samples\W0123PHL_dmc.csv")
library(cleaner) # to create frequency tables
install.packages("cleaner")
w_data <- read.csv("D:\ALLYSA FILE\2023\DMU Files\AMR for R\data samples\W0123PHL_dmc.csv")
w_data <- read.csv("D:/ALLYSA FILE/2023/DMU Files/AMR for R/data samples/W0123PHL_dmc.csv")
head(w_data)
install.packages("RSQLite")
# Define your SQL query
query <- "SELECT * FROM my_table"
# Connect to the SQLite database
con <- dbConnect(SQLite(), dbname = "D:/ALLYSA FILE/2023/DMU Files/AMR for R/data samples/W0123PHL_dmc.sqlite")
install.packages("RSQLServer")
# Disconnect from the database
dbDisconnect(con)
install.packages("RSQLite")
# Disconnect from the database
dbDisconnect(con)
Disconnect from the database
he database
print(tbl_list)
head(con)
head(con)
db <- dbConnect(sqlite.driver,
dbname = filename)
db <- dbConnect(sqlite.driver,
dbname = filename)
# Connect to the SQLite database
filename <- "D:/ALLYSA FILE/2023/DMU Files/AMR for R/data samples/W0123PHL_dmc.sqlite"
# Print the table names
cat("Tables in the database:\n")
table_list <- dbListTables(db)
# Print the table names
cat("Tables in the database:\n")
# Disconnect from the database
dbDisconnect(db)
# Print the table names
cat("Tables in the database:\n")
# Connect to the SQLite database
filename <- "D:/ALLYSA FILE/2023/DMU Files/AMR for R/data samples/W0123PHL_DMC_B.sqlite"
cat(paste(table_list, collapse = ", "))
# Print the table names
print(table_list)
# Print the table names
print(table_list)
# Disconnect from the database
dbDisconnect(db)
# Disconnect from the database
dbDisconnect(db)
# Print the table names
print(table_list)
cat(paste(table_list, collapse = ", "))
# Print the table names
print(table_list)
# Print the table names
print(table_list)
# Connect to the SQLite database
con <- dbConnect(SQLite(), dbname = "D:/ALLYSA FILE/2023/DMU Files/AMR for R/data samples/W0123PHL_DMC_B.sqlite")
# List tables in the database
table_list <- dbListTables(con)
install.packages("RSQLite")
install.packages("RSQLite")
install.packages(RSQLite)
install.packages("RSQLite")
install.packages("RSQLite")
# Print table names
print(table_list)
# Print the table names
cat("Tables in the database: \n")
cat(paste(table_list, collapse = ","))
# Print the table names
cat("Tables in the database: \n")
cat(paste(table_list,collapse = ","))
install. packages("DBI")
install.packages("DBI")
install.packages("DBI")
## Some operations
dbListTables(db)
dbListTables(db)
db <- dbConnect(sqlite.driver, dbname = filename)
db <- dbConnect(sqlite.driver, dbname = filename)
## Some operations
dbListTables(db)
## Some operations
dbListTables(db)
dbListTables(db)
library(dplyr) # part of tidyverse
library(magrittr)
library(ggplot2) # part of tidyverse
library(AMR) # this package
library(cleaner) # to create frequency tables
library(readr)
library(RSQLite)
library(DBI)
filename <- "D:/ALLYSA FILE/2023/DMU Files/AMR for R/data samples/W0123PHL_DMC_B.sqlite"
sqlite.driver <- dbDriver("SQLite")
db <- dbConnect(sqlite.driver,
dbname = filename)
dbListTables(db)
dbListTables(db)
filename <- "D:/ALLYSA FILE/2023/DMU Files/AMR for R/data samples/W0123PHL_DMC_B.sqlite"
sqlite.driver <- dbDriver("SQLite")
db <- dbConnect(sqlite.driver,
dbname = filename)
library(RSQLite)
library(dplyr) # part of tidyverse
library(magrittr)
library(ggplot2) # part of tidyverse
library(AMR) # this package
library(cleaner) # to create frequency tables
library(readr)
w_data <- read.csv("D:/ALLYSA FILE/2023/DMU Files/AMR for R/data samples/W0123PHL_dmc.csv")
head(w_data)
library(dplyr) # part of tidyverse
library(magrittr)
library(ggplot2) # part of tidyverse
library(AMR) # this package
library(cleaner) # to create frequency tables
library(readr)
w_data <- read.csv("D:/ALLYSA FILE/2023/DMU Files/AMR for R/data samples/W0123PHL_dmc.csv")
# transform variables
w_data <- WHONET %>%
# get microbial ID based on given organism
mutate(mo = as.mo(Organism)) %>%
# transform everything from "AMP_ND10" to "CIP_EE" to the new `sir` class
mutate_at(vars(AMP_ND10:CIP_EE), as.sir)
library(dplyr) # part of tidyverse
library(magrittr)
library(ggplot2) # part of tidyverse
library(AMR) # this package
library(cleaner) # to create frequency tables
library(readr)
w_data <- read.csv("D:/ALLYSA FILE/2023/DMU Files/AMR for R/data samples/W0123PHL_dmc.csv")
# transform variables
w_data <- WHONET %>%
# get microbial ID based on given organism
mutate(mo = as.mo(Organism)) %>%
# transform everything from "AMP_ND10" to "CIP_EE" to the new `sir` class
mutate_at(vars(AMP_ND10:CIP_EE), as.sir)
# our newly created `mo` variable, put in the mo_name() function
w_data %>% freq(mo_name(mo), nmax = 10)
library(dplyr) # part of tidyverse
library(magrittr)
library(ggplot2) # part of tidyverse
library(AMR) # this package
library(cleaner) # to create frequency tables
library(readr)
w_data <- read.csv("D:/ALLYSA FILE/2023/DMU Files/AMR for R/data samples/W0123PHL_dmc.csv")
# transform variables
w_data <- WHONET %>%
# get microbial ID based on given organism
mutate(mo = as.mo(Organism)) %>%
# transform everything from "AMP_ND10" to "CIP_EE" to the new `sir` class
mutate_at(vars(AMP_ND10:CIP_EE), as.sir)
# our newly created `mo` variable, put in the mo_name() function
w_data %>% freq(mo_name(mo), nmax = 10)
# our transformed antibiotic columns
# amoxicillin/clavulanic acid (J01CR02) as an example
w_data %>% freq(AMC_ND2)
library(dplyr) # part of tidyverse
library(magrittr)
library(ggplot2) # part of tidyverse
library(AMR) # this package
library(cleaner) # to create frequency tables
library(readr)
library(xlsx)
w_data <- read.csv("data samples/W0123PHL_dmc.csv", encoding = "UTF-8")
setwd("D:/ALLYSA FILE/2023/DMU Files/DMU Projects/AMR for R")
library(dplyr) # part of tidyverse
library(magrittr)
library(ggplot2) # part of tidyverse
library(AMR) # this package
library(cleaner) # to create frequency tables
library(readr)
library(xlsx)
w_data <- read.csv("data samples/W0123PHL_dmc.csv", encoding = "UTF-8")
data <- w_data %>%
# get microbial ID based on given organism
mutate(mo = as.mo(ORGANISM)) %>%
# transform everything to the new `sir` class
mutate(across(AMK_ND30:VOR_ND1, as.disk)) %>%
mutate(across(AMK_NM:VOR_NM, as.mic)) %>%
mutate_at(vars(AMK_ND30:VOR_NM), as.sir)
write.csv(data, file="data samples/tranformed.csv")
